image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE: $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:$CI_COMMIT_SHA

stages:
  - containerize
  - deploy-staging
  - approval
  - deploy-production

before_script:
  - echo "Starting CI process..."
  - >
    echo "DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME" &&
    echo "DOCKER_IMAGE: $DOCKER_IMAGE" &&
    docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

containerize:
  stage: containerize
  script:
    - echo "Building the Docker image..."
    - echo "PGUSER=$PGUSER"
    - echo "PGPASSWORD=$PGPASSWORD"
    - docker build --no-cache --build-arg PGUSER=$PGUSER --build-arg PGPASSWORD=$PGPASSWORD -t $DOCKER_IMAGE .
    - docker tag $DOCKER_IMAGE $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:latest
    - docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:latest
  only:
    - main

deploy-staging:
  stage: deploy-staging
  image: docker:latest
  script:
    - echo "Deploying to staging environment..."
    - echo "$SSH_PRIVATE_KEY" > /tmp/code-keeper.pem
    - chmod 400 /tmp/code-keeper.pem
    - ssh -o StrictHostKeyChecking=no -i /tmp/code-keeper.pem ubuntu@$DEPLOYMENT_IP "
        echo 'Listing all running Docker containers...';
        sudo docker ps -a;
        echo 'Checking for containers using port 5432...';
        CONTAINERS=\$(sudo docker ps --filter 'publish=5432' --format '{{.ID}}');
        if [ -n \"\$CONTAINERS\" ]; then 
          echo 'Port 5432 is in use. Stopping existing containers...'; 
          for CONTAINER in \$CONTAINERS; do 
            echo \"Stopping container \$CONTAINER\";
            sudo docker stop \$CONTAINER || echo 'No such container to stop'; 
            sudo docker rm \$CONTAINER || echo 'No such container to remove'; 
          done; 
        else
          echo 'No containers are using port 5432!';
        fi;
        echo 'Checking for containers using port 5432...';
        CONTAINERS_5432=\$(sudo docker ps --filter 'publish=5432' --format '{{.ID}}');
        if [ -n \"\$CONTAINERS_5432\" ]; then 
          echo 'Port 5432 is in use. Stopping existing containers...'; 
          for CONTAINER in \$CONTAINERS_5432; do 
            echo \"Stopping container \$CONTAINER\";
            sudo docker stop \$CONTAINER || echo 'No such container to stop'; 
            sudo docker rm \$CONTAINER || echo 'No such container to remove'; 
          done; 
        else
          echo 'No containers are using port 5432.';
        fi;
        echo 'Pulling new Docker image...';
        docker pull $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:latest;
        echo 'Running new Docker container...';
        docker run -d -p 5432:5432 $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:latest;
        echo 'Listing all running Docker containers after deployment...';
        sudo docker ps -a"
  only:
    - main

approval:
  stage: approval
  script:
    - echo "Approved to proceed to production deployment"
  dependencies:
    - deploy-staging  
  when: manual
  only:
    - main

deploy-production:
  stage: deploy-production
  image: docker:latest
  script:
    - echo "Deploying to production environment..."
    - echo "$SSH_PRIVATE_KEY" > /tmp/code-keeper.pem
    - chmod 400 /tmp/code-keeper.pem
    - ssh -o StrictHostKeyChecking=no -i /tmp/code-keeper.pem ubuntu@$BILLING_DATABASE_PRODUCTION_IP "
        echo 'Listing all running Docker containers...';
        sudo docker ps -a;
        echo 'Checking for containers using port 5432...';
        CONTAINERS=\$(sudo docker ps --filter 'publish=5432' --format '{{.ID}}');
        if [ -n \"\$CONTAINERS\" ]; then 
          echo 'Port 5432 is in use. Stopping existing containers...'; 
          for CONTAINER in \$CONTAINERS; do 
            echo \"Stopping container \$CONTAINER\";
            sudo docker stop \$CONTAINER || echo 'No such container to stop'; 
            sudo docker rm \$CONTAINER || echo 'No such container to remove'; 
          done; 
        else
          echo 'No containers are using port 5432!';
        fi;
        echo 'Checking for containers using port 5432...';
        CONTAINERS_5432=\$(sudo docker ps --filter 'publish=5432' --format '{{.ID}}');
        if [ -n \"\$CONTAINERS_5432\" ]; then 
          echo 'Port 5432 is in use. Stopping existing containers...'; 
          for CONTAINER in \$CONTAINERS_5432; do 
            echo \"Stopping container \$CONTAINER\";
            sudo docker stop \$CONTAINER || echo 'No such container to stop'; 
            sudo docker rm \$CONTAINER || echo 'No such container to remove'; 
          done; 
        else
          echo 'No containers are using port 5432.';
        fi;
        echo 'Pulling new Docker image...';
        docker pull $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:latest;
        echo 'Running new Docker container...';
        docker run -d -p 5432:5432 $DOCKERHUB_USERNAME/$DOCKER_IMAGE_BILLING_DATABASE:latest;
        echo 'Listing all running Docker containers after deployment...';
        sudo docker ps -a"
  when: manual
  only:
    - main